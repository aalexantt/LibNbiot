#############################################################################
# Makefile for building: libnbiot.a
#############################################################################


# Define any target platforms here. Only targets defined here will be build.
# Don't forget to add appropriate cases below.
# PLATFORMS := default x86 x86-debug x86-shared x86-debug-shared x86_64 x86_64-debug x86_64-shared x86_64-shared-debug arm-cortx-m3 arm-cortx-m3-debug
PLATFORMS := default


# These directories can be renamed but the variables should not be empty
BUILDDIR  := build
LIBDIR    := lib


# Relative path to core library
CORE      := ../libNbiotCore
EXT       := ../external


# Don't change anything from here....
ifneq ($(notdir $(realpath $(CURDIR)/..)),build)
include targets.mk
else

VPATH     := $(SRCDIR) $(INCDIR)
# ... to here, unless you know what you are doing.


# Variable definitions.
INCLUDES  := $(addprefix -I ,$(VPATH)) -I $(COREINC) -I  $(EXTINC)
OBJECTS   := $(subst .cpp,.o,$(shell dir /b "$(SRCDIR)\*.cpp"))
AR        := ar cq
ARFLAGS   := 
TARGET    := libnbiot.a
LINKER    := $(AR)
LFLAGS    := $(ARFLAGS)


# Add special definitions and compile options for target platforms here. Don't
# forget to activate them by adding an entry to PLATFORMS above:
ifeq ($(ARCH),default)
CXX      := g++
CXXFLAGS := -std=c++11 -Wall -Os
CXXFLAGS := -std=c++11 -Wall -g -O0 -ggdb
endif
ifeq ($(ARCH),x86)
CXX       := g++
CXXFLAGS  := -m32 -std=c++0x -Wall -Os
endif
ifeq ($(ARCH),x86-debug)
CXX       := g++
CXXFLAGS  := -m32 -std=c++0x -Wall -D DEBUG -g -O0 -ggdb
endif
ifeq ($(ARCH),x86-shared)
CXX       := g++
CXXFLAGS  := -m32 -std=c++0x -Wall -Os -fPIC
LINKER    := g++
LFLAGS    := -shared -o
TARGET    := libnbiot.so
endif
ifeq ($(ARCH),x86-debug-shared)
CXX       := g++
CXXFLAGS  := -m32 -std=c++0x -Wall -D DEBUG -g -O0 -fPIC -ggdb
LINKER    := g++
LFLAGS    := -shared -o
TARGET    := libnbiot.so
endif
ifeq ($(ARCH),x86_64)
CXX       := g++
CXXFLAGS  := -m64 -std=c++0x -Wall -Os
endif
ifeq ($(ARCH),x86_64-shared)
CXX       := g++
CXXFLAGS  := -m64 -std=c++0x -Wall -Os -fPIC
LINKER    := g++
LFLAGS    := -shared -o
TARGET    := libnbiot.so
endif
ifeq ($(ARCH),x86_64-shared-debug)
CXX       := g++
CXXFLAGS  := -m64 -std=c++0x -Wall -D DEBUG -g -O0 -fPIC -ggdb
LINKER    := g++
LFLAGS    := -shared -o
TARGET    := libnbiot.so
endif
ifeq ($(ARCH),x86_64-debug)
CXX       := g++
CXXFLAGS  := -m64 -std=c++0x -Wall -D DEBUG -g -O0 -ggdb
endif
ifeq ($(ARCH),arm-cortx-m3)
CXX       := arm-none-eabi-gcc
CXXFLAGS  := -mcpu=cortex-m3 -mthumb -Wa,-alh=nbiot_time.lst \
  -g -Wall -ffunction-sections -Os -ffat-lto-objects -std=c++0x
endif
ifeq ($(ARCH),arm-cortx-m3-debug)
CXX       := arm-none-eabi-gcc
CXXFLAGS  := -mcpu=cortex-m3 -mthumb -Wa,-alh=nbiot_time.lst \
  -g -Wall -ffunction-sections -D DEBUG -g -O0 -ffat-lto-objects -std=c++0x -ggdb
endif


# Build targets, usually these don't need to be modified.
first: all


all: $(TARGET)


$(TARGET): $(OBJECTS)
	$(LINKER) $(LFLAGS) $(TARGET) $(OBJECTS)
	xcopy /y $(TARGET) $(subst /,\\,$(LIB)/$(TARGET)*)


%.o: %.cpp
	$(CXX) -c $(CXXFLAGS) $(INCLUDES) $< -o $@


endif
